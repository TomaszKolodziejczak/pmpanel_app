{"version":3,"sources":["actions/auth.js","actions/commentActions.js","reducers/commentReducer.js","actions/projectActions.js","reducers/projectReducer.js","actions/userActions.js","reducers/userReducer.js","reducers/auth.js","reducers/rootReducer.js","store/store.js","components/FormAddEditProject.jsx","components/Buttons.js","components/Comment.js","containers/CommentsList.js","components/FormAddComment.jsx","components/ProjectDetails.js","containers/ProjectDetailsList.js","components/Project.js","containers/ProjectsList.js","containers/AdminPanel.js","routes.js","layouts/Footer.js","layouts/Header.js","layouts/Navigation.js","components/common/PrivateRoute.js","components/accounts/Register.js","components/accounts/Login.js","App.js","serviceWorker.js","index.js"],"names":["USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","tokenConfig","getState","token","auth","config","headers","ADD_COMMENT","DELETE_COMMENT","EDIT_COMMENT","GET_COMMENTS","commentReducer","state","action","type","payload","map","currentStateElement","id","text","projectID","filter","console","warn","ADD_PROJECT","EDIT_PROJECT","DELETE_PROJECT","GET_PROJECTS","getProjects","dispatch","axios","get","then","res","data","catch","err","log","initState","projectReducer","project_id","project_name","start_date","end_date","status","description","participants","ADD_USER","DELETE_USER","EDIT_USER","GET_USERS","getUsers","userReducer","user_id","first_name","last_name","email","sex","phone","initialState","localStorage","getItem","isAuthenticated","isLoading","user","rootReducer","combineReducers","comments","projects","users","setItem","removeItem","window","__REDUX_DEVTOOLS_EXTENSION__","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","FormAddEditProject","Date","toISOString","split","callback","useEffect","useSelector","useDispatch","history","useHistory","useState","nameInput","setNameInput","startDateInput","setStartDateInput","endDateInput","setEndDateInput","statusInput","setStatusInput","descriptionInput","setDescriptionInput","participantsInput","setParticipantsInput","className","style","maxWidth","alignContent","margin","onSubmit","event","preventDefault","projectObject","Number","created_date","last_modified","put","editProject","author","post","addProject","alert","goBack","push","onChange","target","value","placeholder","required","rows","cols","names","CoworkersIds","$","val","item","multiple","href","BackButton","onClick","Comment","createdDate","toLocaleString","authorName","allUsers","i","length","projectAuthorId","allProjects","a","isProjectAuthor","textDecoration","fontSize","fontStyle","listStyleType","color","CommentsList","commentsFiltered","sort","b","parse","comment","props","FormAddComment","textInput","setTextInput","commentObject","addComment","display","ProjectDetails","allParticipants","forEach","userId","isVisibleForm","setIsVisibleForm","toggleElements","prev","formOrButtonElement","handleDelete","confirm","delete","deleteProject","startDate","endDate","ProjectDetailsList","useLocation","projectDetails","project","Project","scope","visited","to","pathname","ProjectList","projectsElements","AdminPanel","this","userSex","userAge","age","userPhone","backgroundColor","Component","connect","BaseRouter","exact","path","component","Footer","Header","authLinks","marginRight","logout","guestLinks","marginTop","list","name","Navigation","menu","rest","render","Register","password","password2","newUser","register","setState","textAlign","pattern","body","JSON","stringify","Login","login","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbdb8a9c.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const USER_LOADED = 'USER_LOADED'\nexport const USER_LOADING = 'USER_LOADING'\nexport const AUTH_ERROR = 'AUTH_ERROR'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\n\n\n\n\n// CHECK TOKEN & LOAD USER\nexport const loadUser = () => (dispatch, getState) => {\n    // User Loading\n    dispatch({ type: USER_LOADING });\n\n    axios\n        .get('/users/auth/user', tokenConfig(getState))\n        .then((res) => {\n            dispatch({\n                type: USER_LOADED,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            // dispatch(returnErrors(err.response.data, err.response.status));\n            dispatch({\n                type: AUTH_ERROR,\n            });\n        });\n};\n\n// LOGIN USER\nexport const login = (email, password) => dispatch => {\n    // Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n\n    // Request Body\n    const body = JSON.stringify({ email, password });\n\n    axios\n        .post('/users/auth/login', body, config)\n        .then((res) => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            // dispatch(returnErrors(err.response.data, err.response.status));\n            dispatch({\n                type: LOGIN_FAIL,\n            });\n        });\n};\n\n// REGISTER USER\nexport const register = ({ email, password, first_name, last_name, age, sex, phone }) => dispatch => {\n    // Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n\n    // Request Body\n    const body = JSON.stringify({ email, password, first_name, last_name, age, sex, phone });\n    console.log(body)\n    axios\n        .post('/users/auth/register', body, config)\n        .then((res) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            console.log(err)\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n        });\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n    axios\n        .post('/users/auth/logout', null, tokenConfig(getState))\n        .then((res) => {\n            dispatch({ type: 'CLEAR_LEADS' });\n            dispatch({\n                type: LOGOUT_SUCCESS,\n            });\n        })\n        .catch((err) => {\n            console.log(err)\n        });\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n    // Get token from state\n    const token = getState().auth.token;\n\n    // Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n\n    // If token, add to headers config\n    if (token) {\n        config.headers['Authorization'] = `Token ${token}`;\n    }\n\n    return config;\n};","import axios from \"axios\";\nimport { tokenConfig } from './auth';\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\nexport const EDIT_COMMENT = 'EDIT_COMMENT';\nexport const GET_COMMENTS = 'EDIT_COMMENT';\n\n// const minDate = new Date().toISOString().slice(0, 10)\n\n\n//GET COMMENTS\n\nexport const getComments = () => (dispatch, getState) => {\n    axios\n        .get('/comments/', tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_COMMENTS,\n                payload: res.data,\n            });\n        })\n        .catch(err => console.log(err));\n};\n\n\n//ADD COMMENT\nexport const addComment = ({\n    text,\n    projectID,\n    author\n}) => (dispatch, getState) => {\n    console.log(author)\n    axios\n\n        .post('/comments/create',\n            {\n                text,\n                projectID,\n                author,\n            }, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: ADD_COMMENT,\n                payload: res.data,\n            });\n        })\n        .catch(err => console.log(err));\n};\n\n\n//EDIT COMMENT\nexport const editComment = ({\n    text,\n    projectID,\n    author,\n    id\n}) => (dispatch, getState) => {\n    axios\n        .put(`/comments/update/${id}`,\n            {\n                text,\n                projectID,\n                author,\n            })\n        .then(res => {\n            dispatch({\n                type: EDIT_COMMENT,\n                payload: res.data,\n            });\n        })\n        .catch(err => console.log(err));\n};\n\n//DELETE COMMENT\nexport const deleteComment = id => (dispatch, getState) => {\n    axios\n        .delete(`/comments/delete/${id}`, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: DELETE_COMMENT,\n                payload: id,\n            });\n        })\n        .catch(err => console.log(err));\n};","import {\n    GET_COMMENTS,\n    ADD_COMMENT,\n    EDIT_COMMENT,\n    DELETE_COMMENT,\n} from \"../actions/commentActions\";\n\nconst commentReducer = (state = [], action) => {\n    switch (action.type) {\n        case GET_COMMENTS:\n            return action.payload;\n\n        case ADD_COMMENT:\n            return [\n                ...state, action.payload\n            ];\n\n        case EDIT_COMMENT:\n            return state.map(currentStateElement => {\n                if (currentStateElement.id !== action.payload.id) {\n                    return currentStateElement;\n                }\n\n                return ({\n                    text: action.payload.text,\n                    projectID: currentStateElement.projectID,\n                    id: currentStateElement.id\n                })\n            });\n\n        case DELETE_COMMENT:\n            return state.filter(currentStateElement =>\n                currentStateElement.id !== action.payload.id);\n\n        default:\n            console.warn(`Com - Unknown action type: ${action.type}`);\n            return state;\n\n    }\n}\n\n\nexport default commentReducer;","import axios from 'axios';\nimport { tokenConfig } from './auth';\n\nexport const ADD_PROJECT = 'ADD_PROJECT';\nexport const EDIT_PROJECT = 'EDIT_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\nexport const GET_PROJECTS = 'GET_PROJECTS';\n\n\nexport const getProjects = () => (dispatch, getState) => {\n    axios\n        .get('/api/', tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_PROJECTS,\n                payload: res.data,\n            });\n        })\n        .catch(err => console.log(err));\n};\n\n//ADD PROJECT\nexport const addProject = ({\n    project_name,\n    start_date,\n    end_date,\n    status,\n    description,\n    created_date,\n    last_modified,\n    participants,\n    author,\n}) => (dispatch, getState) => {\n    axios\n        .post('/api/create',\n            {\n                project_name,\n                start_date,\n                end_date,\n                status,\n                description,\n                created_date,\n                last_modified,\n                participants,\n                author,\n            }, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: ADD_PROJECT,\n                payload: res.data,\n            });\n        })\n        .catch(err => console.log(err));\n};\n\n\n//EDIT PROJECT\n\nexport const editProject = ({\n    project_name,\n    start_date,\n    end_date,\n    status,\n    description,\n    created_date,\n    last_modified,\n    participants,\n    id,\n}) => (dispatch, getState) => {\n    axios\n        .put(`/api/update/${id}`,\n            {\n                project_name,\n                start_date,\n                end_date,\n                status,\n                description,\n                created_date,\n                last_modified,\n                participants,\n            }, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: EDIT_PROJECT,\n                payload: res.data,\n            });\n        })\n        .catch(err => console.log(err));\n};\n\n//DELETE PROJECT\n\nexport const deleteProject = id => (dispatch, getState) => {\n    axios\n        .delete(`/api/delete/${id}`, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: DELETE_PROJECT,\n                payload: id,\n            });\n        })\n        .catch(err => console.log(err));\n};\n\n\n","import {\n    ADD_PROJECT,\n    EDIT_PROJECT,\n    DELETE_PROJECT,\n    GET_PROJECTS\n} from \"../actions/projectActions\";\n\nconst initState = []\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case GET_PROJECTS:\n            return action.payload;\n\n        case ADD_PROJECT:\n            return [\n                ...state, action.payload\n            ];\n\n        case EDIT_PROJECT:\n            return state.map(currentStateElement => {\n                if (currentStateElement.project_id !== action.payload.project_id) {\n                    return currentStateElement;\n                }\n                const {\n                    project_name,\n                    start_date,\n                    end_date,\n                    status,\n                    description,\n                    participants,\n                } = action.payload\n\n                return ({\n                    project_name,\n                    start_date,\n                    end_date,\n                    status,\n                    description,\n                    participants,\n                    project_id: currentStateElement.project_id,\n                })\n            });\n\n        case DELETE_PROJECT:\n            return state.filter(currentStateElement =>\n                currentStateElement.project_id !== action.payload.project_id\n            );\n\n        default:\n            console.warn(`Pro - Unknown action type: ${action.type}`);\n            return state;\n\n    }\n}\n\n\nexport default projectReducer;","import axios from \"axios\";\nimport { tokenConfig } from './auth';\n\nexport const ADD_USER = 'ADD_USER'\nexport const DELETE_USER = 'DELETE_USER'\nexport const EDIT_USER = 'EDIT_USER'\nexport const GET_USERS = 'GET_USERS'\n\n\n\n//GET USERS\nexport const getUsers = () => (dispatch, getState) => {\n    axios\n        .get('/users/auth/users', tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_USERS,\n                payload: res.data,\n            });\n        })\n        .catch(err => console.log(err));\n};\n\n// ADD USER\nexport const addUser = ({\n    first_name,\n    last_name,\n    email,\n    age,\n    sex,\n    phone,\n}) => (dispatch, getState) => {\n    axios\n        .post(`/users/register`, {\n            first_name,\n            last_name,\n            email,\n            age,\n            sex,\n            phone,\n        })\n        .then(res => {\n            dispatch({\n                type: ADD_USER,\n                payload: res.data,\n            });\n        })\n        .catch(err => console.log(err));\n};\n\n\n\n// // EDIT USER\n// export const editUser = ({\n//     first_name,\n//     last_name,\n//     email,\n//     sex,\n//     phone,\n//     id }) => (dispatch, getState) => {\n//         axios\n//             .put(`http://127.0.0.1:8000/users/update/${id}`,\n//                 {\n//                     first_name,\n//                     last_name,\n//                     email,\n//                     sex,\n//                     phone,\n//                     id,\n//                 })\n//             .then(res => {\n//                 dispatch({\n//                     type: EDIT_USER,\n//                     payload: res.data,\n//                 });\n//             })\n//             .catch(err => console.log(err));\n//     };\n\n\n// DELETE USER\nexport const deleteUser = (id) => (dispatch, getState) => {\n    axios\n        .delete(`/users/delete/${id}`)\n        .then(res => {\n            dispatch({\n                type: DELETE_USER,\n                payload: id,\n            });\n        })\n        .catch(err => console.log(err));\n};\n","import {\n    ADD_USER,\n    EDIT_USER,\n    DELETE_USER,\n    GET_USERS,\n} from \"../actions/userActions\";\n\nconst userReducer = (state = [], action) => {\n    switch (action.type) {\n        case GET_USERS:\n            return action.payload;\n\n        case ADD_USER:\n            return [\n                ...state, action.payload\n            ];\n\n        case EDIT_USER:\n            return state.map(currentStateElement => {\n                if (currentStateElement.user_id !== action.payload.user_id) {\n                    return currentStateElement;\n                }\n                const {\n                    first_name,\n                    last_name,\n                    email,\n                    sex,\n                    phone,\n                } = action.payload\n\n                return ({\n                    first_name,\n                    last_name,\n                    email,\n                    sex,\n                    phone,\n                    user_id: currentStateElement.user_id,\n                })\n            });\n\n        case DELETE_USER:\n            return state.filter(currentStateElement =>\n                currentStateElement.user_id !== action.payload.user_id\n            );\n\n        default:\n            console.warn(`User - Unknown action type: ${action.type}`);\n            return state;\n\n    }\n}\n\nexport default userReducer;","import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n} from '../actions/auth';\n\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null,\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload,\n            };\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                isLoading: false,\n            };\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT_SUCCESS:\n        case REGISTER_FAIL:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false,\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport commentReducer from './commentReducer';\nimport projectReducer from './projectReducer';\nimport userReducer from './userReducer';\nimport auth from './auth'\n\nexport const rootReducer = combineReducers({\n    comments: commentReducer,\n    projects: projectReducer,\n    users: userReducer,\n    auth,\n});\n\nexport default rootReducer;","import { applyMiddleware, createStore, compose } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport rootReducer from '../reducers/rootReducer';\n\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\nconst middleware = [thunk];\nconst initialState = {};\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport $ from 'jquery'\n\nimport { addProject, editProject } from '../actions/projectActions'\nimport { getUsers } from '../actions/userActions';\n\nconst FormAddEditProject = ({\n  project_name = '',\n  start_date = new Date().toISOString().split('T')[0],\n  end_date = new Date().toISOString().split('T')[0],\n  status = '0',\n  description = '',\n  participants = [],\n  id,\n  callback,\n}) => {\n\n  //get users from api\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [])\n  const users = useSelector(store => store.users);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  //project attributes states setting\n  const [nameInput, setNameInput] = useState(project_name);\n  const [startDateInput, setStartDateInput] = useState(start_date);\n  const [endDateInput, setEndDateInput] = useState(end_date);\n  const [statusInput, setStatusInput] = useState(status);\n  const [descriptionInput, setDescriptionInput] = useState(description);\n  const [participantsInput, setParticipantsInput] = useState(participants);\n\n  //project attributes states handling\n  const handleNameChange = event => setNameInput(event.target.value);\n  const handleStartDateChange = event => setStartDateInput(event.target.value);\n  const handleEndDateChange = event => setEndDateInput(event.target.value);\n  const handleStatusChange = event => setStatusInput(event.target.value);\n  const handleDescriptionChange = event => setDescriptionInput(event.target.value);\n  const handleParticipantsChange = () => {\n    let multiple = $(\"#participantsIds\").val() || []\n    const CoworkersIds = multiple.map(item => Number(item))\n    setParticipantsInput(CoworkersIds);\n  }\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n\n    const projectObject = {\n      project_name: nameInput,\n      id,\n      start_date: startDateInput,\n      end_date: endDateInput,\n      status: Number(statusInput),\n      description: descriptionInput,\n      participants: participantsInput,\n    };\n\n    // clear form\n    setNameInput('')\n    setStartDateInput(new Date())\n    setEndDateInput(new Date())\n    setStatusInput('0')\n    setParticipantsInput([])\n    setDescriptionInput('')\n\n    id\n      ? dispatch(editProject(projectObject))\n      : dispatch(addProject(projectObject));\n\n\n    if (id) {\n      callback();\n      alert('Project has been changed.');\n      history.goBack();\n    }\n    history.push('/projects')\n  }\n\n\n\n  return (\n    <div className=\"container\" style={{ maxWidth: 400, alignContent: 'center' }}>\n      <div className=\"card\" style={{ margin: 15 }}>\n        <div className=\"card-body bg-light\">\n          <i>Enter data below:</i>\n\n          <form onSubmit={handleOnSubmit}>\n            <div className=\"input-group mb-3\">\n              <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Project name</span>\n              <input className=\"form-control\"\n                aria-label=\"Sizing example input\"\n                aria-describedby=\"inputGroup-sizing-default\"\n                onChange={handleNameChange}\n                type=\"text\"\n                value={nameInput}\n                placeholder={\n                  nameInput\n                    ? nameInput\n                    : 'Enter project name here'\n                }\n                required />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Start date</span>\n              <input className=\"form-control\"\n                aria-label=\"Sizing example input\"\n                aria-describedby=\"inputGroup-sizing-default\"\n                onChange={handleStartDateChange}\n                type=\"date\"\n                value={startDateInput}\n                placeholder={\n                  startDateInput\n                    ? startDateInput\n                    : new Date()\n                }\n                required />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">End date</span>\n              <input className=\"form-control\"\n                aria-label=\"Sizing example input\"\n                aria-describedby=\"inputGroup-sizing-default\"\n                onChange={handleEndDateChange}\n                type=\"date\"\n                value={endDateInput}\n                placeholder={\n                  endDateInput\n                    ? endDateInput\n                    : new Date()\n                }\n                required />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Project description</span>\n              <input className=\"form-control\"\n                aria-label=\"Sizing example input\"\n                aria-describedby=\"inputGroup-sizing-default\"\n                onChange={handleDescriptionChange}\n                type=\"text\"\n                value={descriptionInput}\n                rows=\"3\"\n                cols=\"30\"\n                placeholder={\n                  descriptionInput\n                    ? descriptionInput\n                    : 'Enter project description here'\n                }\n                required />\n            </div>\n\n            <div>\n              <label style={{ margin: 10 }}>\n                Status\n                <select\n                  className=\"form-select\"\n                  aria-label=\"multiple select example\"\n                  onChange={handleStatusChange}\n                  value={statusInput}\n                  placeholder={\n                    statusInput\n                      ? statusInput\n                      : '0'\n                  }>\n                  <option value='0'>New</option>\n                  <option value='1'>Kickoff Meeting</option>\n                  <option value='2'>Ongoing</option>\n                  <option value='3'>Last Fixes</option>\n                  <option value='4'>Finished</option>\n                </select>\n              </label>\n            </div>\n\n            <div>\n              <label className=\"form-group\">\n                Co-workers\n                <select\n                  className=\"form-select\"\n                  aria-label=\"multiple select example\"\n                  names=\"participantsIds\"\n                  id=\"participantsIds\"\n                  type=\"text\"\n                  placeholder={participantsInput}\n                  onChange={handleParticipantsChange}\n                  multiple\n                >\n                  {users.map(user =>\n                    <option key={user.id} value={user.id}\n                    >{user.first_name}, {user.email}</option>)}\n                </select>\n              </label>\n            </div>\n\n            <button type=\"submit\" style={{ margin: 10 }} className=\"btn btn-primary\" href=\"/\">\n              {id\n                ? 'Update'\n                : 'Add new project'}\n            </button>\n          </form>\n        </div >\n      </div>\n    </div>\n  );\n}\n\nexport default FormAddEditProject;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\n\n\nconst BackButton = () => {\n\n    const history = useHistory();\n    const handleClick = () => history.goBack();\n\n    return (\n        <button\n            style={{ margin: 10 }}\n            // htmlType=\"button\"\n            className=\"btn btn-dark\"\n            onClick={handleClick}>\n            <i className=\"fas fa-undo\"> Back </i>\n        </button>\n    )\n}\n\nexport default BackButton;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getUsers } from '../actions/userActions';\nimport { getProjects } from '../actions/projectActions'\n\n\nconst Comment = ({ text, id, created_date, author, projectID }) => {\n\n  //get users from api\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [])\n\n  //get projects from api\n  useEffect(() => {\n    dispatch(getProjects());\n  }, [])\n\n  const users = useSelector(store => store.users);\n  const projects = useSelector(store => store.projects);\n\n  const dispatch = useDispatch();\n\n  const createdDate = new Date(created_date).toLocaleString()\n\n  //ger author name\n  let authorName = ''\n  let allUsers = [...users]\n  for (var i = 0; i < allUsers.length; i++) {\n    if (allUsers[i].id === author) {\n      console.log('trafione')\n      authorName = allUsers[i].first_name;\n      break;\n    }\n  }\n\n  //get project author id\n  let projectAuthorId = ''\n  let allProjects = [...projects]\n  for (var a = 0; a < allProjects.length; a++) {\n    if (allProjects[a].id === projectID) {\n      projectAuthorId = allProjects[a].author;\n      break;\n    }\n  };\n\n  let isProjectAuthor = (author === projectAuthorId);\n\n  const authorStyle = {\n    color: 'green'\n  }\n\n\n  return (\n    <div>\n      <li key={id} style={{ textDecoration: 'none', fontSize: 12, fontStyle: 'italic', listStyleType: 'none' }}>\n        <p>\n          <strong style={isProjectAuthor ? authorStyle : null}>{text} </strong>\n          <i>({createdDate} by {authorName})  </i>\n        </p>\n      </li>\n    </div >\n  );\n}\n\nexport default Comment;\n","import { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect } from 'react';\n\nimport Comment from '../components/Comment';\nimport { getComments } from '../actions/commentActions';\n\n\nconst CommentsList = ({ id }) => {\n\n    //get comments from api\n    const dispatch = useDispatch()\n    const comments = useSelector(store => store.comments);\n\n    useEffect(() => {\n        dispatch(getComments());\n    }, []);\n\n    const sortedByDate = comments.sort((a, b = 0) => Date.parse(b.created_date) - Date.parse(a.created_date));\n\n    const commentsElements = sortedByDate.map(comment => (\n        <Comment key={comment.id} {...comment} />\n    ))\n\n    const commentsFiltered = commentsElements.filter(comment =>\n        comment.props.projectID === id\n    );\n\n    return (\n        <ul>\n            {commentsFiltered}\n        </ul>\n    );\n}\n\n\nexport default CommentsList;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addComment } from '../actions/commentActions';\n\n\nconst FormAddComment = ({\n  text = '',\n  projectID,\n}) => {\n\n\n  const [textInput, setTextInput] = useState(text);\n\n  const dispatch = useDispatch();\n\n  const handleTextChange = event => setTextInput(event.target.value);\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    if (!textInput.length) {\n      return;\n    }\n\n    const commentObject = {\n      text: textInput,\n      projectID,\n    };\n\n    setTextInput('')\n    dispatch(addComment(commentObject));\n\n  }\n\n  return (\n    <div className=\"container\" style={{ margin: 15 }}>\n      <div className=\"row align-items-center\">\n        <div className=\"col\"></div>\n        <div className=\"col-5\">\n\n          <form onSubmit={handleOnSubmit} style={{ display: 'inline', maxWidth: 200 }}>\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                onChange={handleTextChange}\n                value={textInput}\n                className=\"form-control\"\n                placeholder={'Enter your comment here'}\n                aria-describedby=\"button-addon1\"\n              />\n            </div>\n            <button className=\"btn btn-outline-primary\"><i className=\"fas fa-plus-circle\"> Add comment</i> </button>\n          </form>\n\n        </div>\n        <div className=\"col\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default FormAddComment;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { useHistory } from 'react-router-dom'\n// import PropTypes from 'prop-types';\n\nimport BackButton from './Buttons';\nimport CommentsList from '../containers/CommentsList';\nimport FormAddComment from './FormAddComment';\nimport FormAddEditProject from './FormAddEditProject.jsx';\nimport { deleteProject } from '../actions/projectActions';\nimport { getUsers } from '../actions/userActions';\n\n\nconst ProjectDetails = ({\n  project_name,\n  start_date,\n  end_date,\n  status,\n  description,\n  participants,\n  id,\n  author, }) => {\n\n  // const propTypes = {\n  //   auth: PropTypes.object.isRequired,\n  // };\n\n  // const { user } = propTypes.auth;\n\n  // get users from api\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [])\n\n  const users = useSelector(store => store.users);\n\n  // get participants names \n  let allUsers = [...users]\n  let allParticipants = [...participants]\n  let names = []\n  allParticipants.forEach(userId => allUsers.map(\n    user => {\n      if (user.id === userId) {\n        names.push(`${user.first_name}, `)\n      }\n    }\n  ))\n\n  let authorName = ''\n\n  for (var i = 0; i < allUsers.length; i++) {\n    if (allUsers[i].id === author) {\n      authorName = allUsers[i].first_name;\n      break;\n    }\n  }\n\n  const [isVisibleForm, setIsVisibleForm] = useState(false);\n\n  const history = useHistory();\n\n  const toggleElements = () => setIsVisibleForm(prev => !prev);\n\n  const formOrButtonElement = isVisibleForm\n    ? (\n      <FormAddEditProject\n        project_name={project_name}\n        start_date={start_date}\n        end_date={end_date}\n        status={status}\n        description={description}\n        participants={participants}\n        id={id}\n        author={author}\n        callback={toggleElements}\n      />\n    ) : (\n      <button style={{ margin: 10 }} className=\"btn btn-primary\" onClick={toggleElements}>\n        Update\n      </button>\n    )\n\n  const handleDelete = (id) => {\n    if (window.confirm('Do you want to delete this project?')) {\n      dispatch(deleteProject(id));\n      alert('Project has been deleted!')\n      history.push('/projects')\n      // { <Redirect to='/projects' /> }\n    }\n  }\n\n  const statusNames = {\n    0: 'New',\n    1: 'Kickoff meeting',\n    2: 'Ongoing',\n    3: 'Last fixes',\n    4: 'Finished',\n  }\n  const startDate = start_date.toLocaleString()\n  const endDate = end_date.toLocaleString()\n\n  return (\n    <div className=\"container\" style={{ margin: 15 }}>\n      <div className=\"row align-items-center\">\n        <div className=\"col\"></div>\n        <div className=\"col-6\">\n          <div className=\"card text-center bg-light\">\n            <div className=\"card-header\">{statusNames[status]}</div>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{project_name}</h5>\n              <div className=\"card-text\">\n                {description}\n                <br />Author: {authorName}\n                <br />Co-workers: {names}\n                <br />\n                {formOrButtonElement}\n                <button style={{ margin: 10 }} className=\"btn btn-danger\" onClick={() => handleDelete(id)} >\n                  Delete\n                </button>\n                <BackButton />\n              </div>\n              <p>You can edit or delete only your own projects</p>\n            </div>\n            <div className=\"card-footer text-muted\">Duration from {startDate} to {endDate}.</div>\n          </div>\n        </div>\n        <div className=\"col\"></div>\n      </div>\n\n      <FormAddComment projectID={id} />\n      <CommentsList id={id} />\n\n    </div >\n  );\n}\n\nexport default ProjectDetails;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport ProjectDetails from '../components/ProjectDetails';\n\n\nconst ProjectDetailsList = (props) => {\n\n  const location = useLocation()\n  const id = location.state.id\n\n  //get projects from store\n  const projects = useSelector(store => store.projects);\n  const projectToDetail = projects.filter(project => (\n    project.id === id\n  ));\n\n  const projectDetails = projectToDetail.map(project => (\n    <ProjectDetails key={project.id} {...project} />\n  ));\n\n  return (\n    <div className=\"card\" style={{ margin: 15 }}>\n      <div className=\"card-body\">\n        <ul>\n          {projectDetails}\n        </ul>\n      </div></div>\n  );\n}\n\n\nexport default ProjectDetailsList;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Project = ({\n  project_name,\n  start_date,\n  end_date,\n  status,\n  id,\n}) => {\n\n  const statusNames = {\n    0: 'New',\n    1: 'Kickoff meeting',\n    2: 'Ongoing',\n    3: 'Last fixes',\n    4: 'Finished',\n  }\n\n  const endDate = end_date.toLocaleString()\n\n  return (\n\n    <tr>\n      <th scope=\"row\">{statusNames[status]}</th>\n      <td>{project_name}</td>\n      <td>{endDate}</td>\n      <td>\n        <button className=\"btn btn-light\">\n          <NavLink\n            style={{ textDecoration: 'none', visited: 'none' }}\n            to={{ pathname: \"/details\", state: { id } }} >\n            Click here to see project details\n          </NavLink>\n        </button>\n      </td>\n    </tr>\n\n  );\n}\n\nexport default Project;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getProjects } from '../actions/projectActions';\nimport { getUsers } from '../actions/userActions';\nimport Project from '../components/Project';\n\n\nconst ProjectList = () => {\n\n  //get project and users from store and api\n  const dispatch = useDispatch()\n  const projects = useSelector(store => store.projects);\n  const users = useSelector(store => store.users);\n\n  useEffect(() => {\n    dispatch(getProjects());\n  }, []);\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n\n  const sortedById = projects.sort((a, b = 0) => (b.id) - (a.id));\n\n  const projectsElements = sortedById.map(project => (\n    <Project key={project.id} {...project} {...users} />\n  ));\n\n  return (\n    <div className=\"card\" style={{ margin: 15 }}>\n      <div className=\"card-body bg-light\">\n        {!projectsElements.length\n          ? 'There is no projects'\n          : <table className=\"table table-hover\">\n            <thead>\n              <tr className=\"fs-4\">\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Project name</th>\n                <th scope=\"col\">Deadline</th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody className=\"fs-5\">\n              {projectsElements}\n            </tbody>\n          </table>}\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\n// import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\nexport class AdminPanel extends Component {\n\n    static propTypes = {\n        auth: PropTypes.object.isRequired,\n        isAuthenticated: PropTypes.bool,\n    };\n\n\n    render() {\n        const { user } = this.props.auth;\n\n        // if (!this.props.isAuthenticated) {\n        //     return <Redirect to=\"/\" />;\n        // }\n\n        const sexes = {\n            1: 'Male',\n            2: 'Female'\n        }\n\n        const userSex =\n            user.sex\n                ? sexes[user.sex]\n                : ' no data'\n\n        const userAge =\n            user.age\n                ? user.age\n                : ' no data'\n\n        const userPhone =\n            user.phone\n                ? user.phone\n                : ' no data'\n\n        return (\n            <div className=\"container\" style={{ maxWidth: 400, alignContent: 'center' }}>\n                <div className=\"card\" style={{ margin: 15 }}>\n\n                    <div className=\"card-header\" style={{ backgroundColor: 'navy', color: 'white' }}>\n                        {user.first_name} {user.last_name}\n                    </div>\n                    <ul className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\">Email: {user.email}</li>\n                        <li className=\"list-group-item\">\n                            Sex: {userSex}, age: {userAge}, phone number {userPhone}\n                        </li>\n                        <li className=\"list-group-item\">\n\n                        </li>\n                    </ul>\n                </div></div>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {})(AdminPanel);\n","import React, { Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n\nimport FormAddEditProject from './components/FormAddEditProject.jsx';\nimport ProjectDetailsList from './containers/ProjectDetailsList';\nimport ProjectList from './containers/ProjectsList';\nimport AdminPanel from './containers/AdminPanel.js';\n\n\nconst BaseRouter = () => {\n    return (\n        <Fragment>\n            <Switch>\n                <Route exact path='/' component={ProjectList} />\n                <Route exact path='/add_or_update' component={FormAddEditProject} />\n                <Route exact path='/details' component={ProjectDetailsList} />\n                <Route exact path='/projects' component={ProjectList} />\n                <Route exact path='/admin' component={AdminPanel} />\n            </Switch>\n        </Fragment>\n    );\n}\n\nexport default BaseRouter;\n","import React, { Fragment } from 'react';\n\nconst Footer = () => {\n    return (\n        <Fragment>\n            <p>2021</p>\n        </Fragment>\n    );\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../actions/auth';\n\n\nexport class Header extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    logout: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    const authLinks = (\n      <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n        <span className=\"navbar-text mr-2\" style={{ marginRight: 5 }}>\n          <strong>{user ? `Welcome ${user.first_name}` : ' '}</strong>\n        </span>\n        <li className=\"nav-item\">\n          <button onClick={this.props.logout} className=\"nav-link btn btn-outline-light\">\n            Logout\n          </button>\n        </li>\n      </ul>\n    );\n\n    const guestLinks = (\n      <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n        <li className=\"nav-item\">\n          <Link to=\"/register\" className=\"nav-link\">\n            Register\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/login\" className=\"nav-link\">\n            Login\n          </Link>\n        </li>\n      </ul>\n    );\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark\" style={{ backgroundColor: 'navy', marginTop: 5 }}>\n        <div className=\"container\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarTogglerDemo01\"\n            aria-controls=\"navbarTogglerDemo01\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n            <a className=\"navbar-brand\" href=\"/\">\n              Project Management Panel\n            </a>\n          </div>\n          {isAuthenticated ? authLinks : guestLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../styles/Navigation.css'\n\n\nconst list = [\n  { name: \"projects\", path: \"/projects\" },\n  { name: \"add new project\", path: \"/add_or_update\" },\n  { name: \"User details\", path: \"/admin\" },\n]\n\nconst Navigation = () => {\n\n  const menu = list.map(item => (\n    <li key={item.name} >\n      <NavLink to={item.path} exact={item.exact ? item.exact : false}>{item.name}</NavLink>\n    </li >\n  ))\n\n  return (\n\n    <div className=\"card\" style={{ margin: 15 }}>\n      <div className=\"card-body\">\n        <nav className=\"main\">\n          <ul>\n            {menu}\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Navigation;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n        {...rest}\n        render={(props) => {\n            if (auth.isLoading) {\n                return <h2>Loading...</h2>;\n            } else if (!auth.isAuthenticated) {\n                return <Redirect to=\"/login\" />;\n            } else {\n                return <Component {...props} />;\n            }\n        }}\n    />\n);\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/auth';\n\nexport class Register extends Component {\n    state = {\n        email: '',\n        password: '',\n        password2: '',\n        first_name: '',\n        last_name: '',\n        age: '',\n        sex: '',\n        phone: '',\n    };\n\n    static propTypes = {\n        register: PropTypes.func.isRequired,\n        isAuthenticated: PropTypes.bool,\n    };\n\n    onSubmit = event => {\n        event.preventDefault();\n        const { email, password, password2, first_name, last_name, age, sex, phone } = this.state;\n        if (password !== password2) {\n            alert('Passwords do not match');\n        } else {\n            const newUser = {\n                email,\n                password,\n                first_name,\n                last_name,\n                sex: Number(sex),\n                age: Number(age),\n                phone\n            };\n            this.props.register(newUser);\n            console.log(newUser)\n        }\n    };\n\n    onChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n\n    }\n\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Redirect to=\"/\" />;\n        }\n        const { email, password, password2, first_name, last_name, age, sex, phone } = this.state;\n        return (\n            <div className=\"container\" style={{ maxWidth: 400, alignContent: 'center', textAlign: 'center' }}>\n                <div className=\"card card-body mt-5\">\n                    <h2 className=\"text-center\">Register</h2>\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"form-group\">\n                            <label>Email adress</label>\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                onChange={this.onChange}\n                                value={email}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>First name</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"first_name\"\n                                onChange={this.onChange}\n                                value={first_name}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                onChange={this.onChange}\n                                value={password}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Confirm Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                name=\"password2\"\n                                onChange={this.onChange}\n                                value={password2}\n                            />\n                        </div>\n                        <br /><br />\n                        <p style={{ fontStyle: 'italic' }}>optional data below</p>\n                        <hr />\n\n                        <div className=\"form-group\">\n                            <label>Last name</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"last_name\"\n                                onChange={this.onChange}\n                                value={last_name}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Age</label>\n                            <input\n                                type=\"number\"\n                                className=\"form-control\"\n                                name=\"age\"\n                                onChange={this.onChange}\n                                value={age}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Sex</label>\n                            <select\n                                // type=\"radio\"\n                                className=\"form-control\"\n                                name=\"sex\"\n                                onChange={this.onChange}\n                                value={sex}\n                            >\n\n                                <option value='0'>Choose..</option>\n                                <option value='1'>Male</option>\n                                <option value='2'>Female</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Phone</label>\n                            <input\n                                type=\"tel\"\n                                className=\"form-control\"\n                                name=\"phone\"\n                                onChange={this.onChange}\n                                value={phone}\n                                pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{3}\"\n                                placeholder=\"123-456-789\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"btn btn-primary\" style={{ margin: 5 }}>\n                                Register\n                            </button>\n                        </div>\n                        <p>\n                            Already have an account? <Link to=\"/login\">Login</Link>\n                        </p>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(Register);","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nexport class Login extends Component {\n    state = {\n        email: '',\n        password: '',\n    };\n\n    static propTypes = {\n        login: PropTypes.func.isRequired,\n        isAuthenticated: PropTypes.bool,\n    };\n\n    onSubmit = event => {\n        event.preventDefault();\n        this.props.login(this.state.email, this.state.password);\n    };\n\n    onChange = event => this.setState({ [event.target.name]: event.target.value });\n\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Redirect to=\"/\" />;\n        }\n        const { email, password } = this.state;\n        return (\n            <div className=\"container\" style={{ maxWidth: 400, alignContent: 'center' }}>\n                <div className=\"card card-body mt-5\">\n                    <h2 className=\"text-center\">Login</h2>\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"form-group\">\n\n                            <label>Email adress</label>\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                onChange={this.onChange}\n                                value={email}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                onChange={this.onChange}\n                                value={password}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"btn btn-primary\" style={{ margin: 5 }}>\n                                Login\n                            </button>\n                        </div>\n                        <p>\n                            Don't have an account? <Link to=\"/register\">Register</Link>\n                        </p>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Switch, Route } from 'react-router';\n\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport BaseRouter from './routes';\nimport Footer from './layouts/Footer';\nimport Header from './layouts/Header';\nimport Navigation from './layouts/Navigation';\nimport PrivateRoute from './components/common/PrivateRoute';\n\nimport './styles/App.css'\nimport Register from './components/accounts/Register';\nimport Login from './components/accounts/Login'\nimport { loadUser } from './actions/auth'\n\nclass App extends Component {\n\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Router>\n            <div className=\"app\">\n              <header>\n                {<Header />}\n              </header>\n              <main>\n                <aside>\n                  {<Navigation />}\n                </aside>\n                <section className=\"page\">\n                  <Switch>\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <PrivateRoute component={BaseRouter} />\n                  </Switch>\n                </section>\n              </main>\n              <footer>\n                {<Footer />}\n              </footer>\n\n            </div>\n\n          </Router>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\n\nimport './styles/index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}